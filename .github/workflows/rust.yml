---
on: [pull_request]

name: Rust
jobs:
  test:
    name: Test the heed project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run cargo test
        run: |
          cargo clean
          cargo test

  check-heed3:
    name: Check the heed3 project
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run cargo check
        run: |
          cargo clean
          ./convert-to-heed3.sh
          cargo check -p heed3

  check_all_features:
    name: Check all the features of the heed project
    runs-on: ${{ matrix.os }}
    env:
      RUSTFLAGS: -D warnings
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
          - os: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run cargo test
        run: |
          cargo clean
          cargo check --all-features -p heed

  check_all_features-heed3:
    name: Check all the features of the heed3 project
    runs-on: ${{ matrix.os }}
    env:
      RUSTFLAGS: -D warnings
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
          - os: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run cargo test
        run: |
          cargo clean
          ./convert-to-heed3.sh
          cargo check --all-features -p heed3

  examples:
    name: Run the heed examples
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
          - os: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run the examples
        run: |
          cargo clean
          # rmp-serde needs a feature activated, so we'll just run it separately.
          cargo run --example 2>&1 | grep -E '^ ' | awk '!/rmp-serde/' | xargs -n1 cargo run --example
          cargo run --example rmp-serde --features serde-rmp

  heed3-examples:
    name: Run the heed3 examples
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
          - os: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Run the examples
        run: |
          cargo clean
          ./convert-to-heed3.sh
          cargo run --example 2>&1 | grep -E '^ '| xargs -n1 cargo run --example

  fmt:
    name: Ensure the heed project is formatted
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - name: Run cargo fmt
        run: cargo fmt --check
